package cond

/*
与互斥锁不同，条件变量的作用并不是保证在同一时刻仅有一个线程访问某一个共享数据
而是在对应的共享数据的状态发生变化时，通知其他因此而被阻塞的线程
条件变量总是与互斥锁组合使用，互斥锁为共享数据的访问提供互斥支持
而条件变量可以就共享数据的状态的变化向相关线程发出通知
*/

// 使用场景: 我需要完成一项任务，但是这项任务需要满足一定条件才可以执行，否则我就等着

func NewCond(l Locker) *Cond // 生成一个cond,需要传入实现Locker接口的变量,一般是*Mutex或*RWMutex类型的值
func (c *Cond) Wait()        // 等待通知
func (c *Cond) Signal()      // 发送单个通知
func (c *Cond) Broadcast()   // 广播(多个通知)
